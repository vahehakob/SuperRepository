%!PS-Adobe-2.0
%%Creator: dvips(k) 5.99 Copyright 2010 Radical Eye Software
%%Title: tmp.dvi
%%CreationDate: Fri Jun  7 13:47:35 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 252
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o tmp.ps tmp.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.06.07:1347
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 72 /H put
dup 76 /L put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE295014645895872580E379881BE7C
CD90FFDA7BB3B40A6386A75CC6DC32B110F005A191549DF2F43E7D52E442E8A7
945D1DF17FA4A20F18140F4C14D8719DE497FC97A9D171AEC4C9FF966EB2A72B
35A074D10C98256868B461E056C6A78047ACD0F86DDAA2DE1EF3C6CA054ED739
43131131ECEE2A39FAE6EE293844EEDE173452C0642746FD2A9EC08ECC3F08B5
6E85648F42FC8573EAB04A3356958455286C1A02208B0355D14C218D571C3EB1
A050306F1A20763850EFFC345954EBE8DFE4FE17D296ECD8B322F8192430635B
74CA881353E4CE103BADA0E97277556DC5CE792212AF26C281A5EC4A2B61C59F
2CA9D216EA735B2F76F0C4E334DDF73F19B5844003D33DDED94966CBFB46E982
86E8AB5BBCC5A8C431D8D7B981D470A860D205AE370E3BF8733F2268AFE2F77E
6ABDD8D9235ACCEB4E79BC37A36535F4C3ED8C840F18C70D934303EDB1F5B0A3
7817AB41CD15536F59F386CB04F18BBC35AFB2BDE1E5431BEC51670EF8463D38
94E9EB273A452255A0E67CEA1E27592C2CDEC332290C55CD9763824E0FF1718B
5F45C6372BAB01A1318DF6B7EAE3FBE028D514C87A680A7A532F0E53AD0E8DFF
D58E5318CD72CC4BB057439C03CB5C9E7751731C22BA726B307A8EA989096251
2B2DE3CC959848E597AF9693C973462254BC1B1501FE22953A7743F878296DCE
07D14F620B90A67F273B311061BF2D3CE3DC3CC68AD610BF5DD105C8A8E7861C
4EC541FE5C14FD2B252B078A014AF3BB404CDF3CAADE7A8ED6135F0B18A19D31
AEEBFC1457D8B9EC0579FB5E1F42C4533051364EBFC645F3F85475C51BE25B99
30603C96D5B2513D197CD7968D2BE65D8CC54AE5E1453264D8E2AEE753165BA7
9B57FEA489603A9D23AD33DD173E665450B97977C9B1D1632EE2491BCE5D26D3
D36677BB3A5A4810EE5FB2D28FC309DA71FED27E3DADCEA182AFAA7BA83BAD5D
8F83B423249930AA96A06C0BB879D45CE177D428DB98A70D15F48C2F6102B1EA
16CD32D1AF929F9A2E98F3AAEA149D44C84A2FFD5B949636BA68231730C7F281
37AC3A0D90E781E785AE501D27E5A37C44B0D676049055F26D066874054906D1
5E454B05543BAF5C0E25FB3457ABBA1EDAD646E7160FF8B23AC9B3A7309E3A12
3D5F1643BCAD576BC49FBD64F7A930A791FD4BBA359AB5BFF346F5569E040C8F
EAD212EDB3C9A84A30F3EA6F3E7FF1823C71EF5BD4CFE9E2425C10CA41298509
1B4993AD4B09E331D14A662DA0E2251998CD0CFAAC45EE3DCB18B1DF5F8B1351
F3977813674AA6FA7E82CDBD8B600FFBCFA5C1900BDB11125CE2C263BE329136
1AE04D572FB04D48E69939FDF48DF49CBE4C7E06C4FC88CAC7D4E6243535756A
16E8194898045A692CF9983FF782B3E8641F325BD588D00D8A6A06984EFB90CF
31A30BD6C4294984AEB8456DF07BDF01376A5543CF0594EF24D31D3DE3DEF2F5
2928CD28DB410742EB127441F4B6AD22AA48410B3D3A67252C4B2A6EE5758EBF
85B54A0587D990024BBE838C92DD3A8F95711B6E9CEFC52B9B569D70840E2E28
F07E5F227C50667051FE771D8C525A411653B103BDA95463F07283E49DBD9F51
4BABC621975914D69232017A44E871FA52F00AF455B973C0544C5C7B6382E516
245ABFFC8EDD3B9237AD01061BCDE9DE415E7F764C291FBCE896070FDAA173E3
0E0FDCF3FF4D2DCC0E1BE4BB40B79ABFD8AF088AF24D18DA2BF2DA2F97C39E5A
5DBE8C153D297B179E36436FA46BA59CAF8946E9E068B6ABB98A5D4359E63EFB
2A955A108E43D6A641DA88BB9BB43FEE1B5E52CAB31F8ADEBC2F407F265666D7
579BCEA6D053FE58FA2BC93E0E74AC3DB2FA45CE3BCB2EA1EA7FE3BC6677F11B
A2E521F913B4AD13F8F95AB9B4E297384B46563E900335CA6C49832E907E0CFA
2AD4257AFB55B24F4B2B30DC9649BD8A846E6BD3538783714CC31948CD2D8243
F9BF9E9C10009DFE9A7B2952D416446B39875C9DF69555C9B7126C35956529C3
E96AFA1530413CDD500C5F85EFC3EBB3655EE061D4137C68432DEC0053CEC73F
0C5B96423DE0CE8EC58E4F244AB1CEDD34262B37A194E8E704385D74F523248B
1E8A05090767422EF02AD32668D11233CB1138DE07F7C9541CE2EC94D8F614CA
3BF91B9F3FFACA55A9F6FB252135F6738D5F28646C88F075C0E9E51B696AF81E
1E2491729B342C35AB5346654275B55B91335200711ED945E18B4BB51D77B862
B9F111E663E7538F927A87C3FCB97298C1F18EA1586E58DACBBBB7F256C430CB
CF44C28B61AA0275BA89EFA3A5BC1167B3769B36A0813B811DF3515CC01B8422
2859A7B1BEB93B1644047CAB5CFAC04A2AA2E7021E29FF39FD730EB89377E45A
B50CDF50B97C7BA1501615A5195643DEBC81391D1BA2451F461DD52B5D34C9A5
E323AEFA3FDB17EE7AFBD6D2FC308BCAF48CD46BEE2B645FC0FBB35FE44DC25B
2D09595662846464B25687240B575A6CBEEF06521A31EBA880D24293E3ECF03B
4AFBDE439F64EDA6CE61D8F061BE5406E7BC10B8386B25AB4CF85048789BE200
9182927DF994271B1F39BB29575F0D72916AF4B38F61CD2C4EB718886E4FF6A9
F8F6EFAF9552AD1D7CEB336D499F0419CBF15CD531E39D2F25C18FDDB4DFFC60
F7067AEB7A4405415CF619B47ED5B570B30ABE193659A42AEDE12000A9190295
C2E82BB2CF893F8EE8ADD5AB5EDBEA0DAE9D8C2E8229C1FED83432070A19DB10
22CEE5BF7BB9A7597D0CB123F26F44A44A50D3E4011D097E2C9FCA76EA52E039
D7115B409DDFFEE275FE0A2E022331F145758E212028EDA4F41976945501F388
D3F75AB3167A88AAED132254ABC09105BB9E2E814D2FAF139C90CE7F8D073A8C
47D478FE1788AF768FE9FE3A7434E53F28C0417E0BD2BF59C4723FBA2FC1A1AF
A932B1485A158736FC5E3A6EA4ED4A4D375B2D42DBD1B70D7A5E03B4FC98EB53
F373EF24A82EDCEDCE509D926BD5E3C4F6E6C2EEF52F93BEDABC7C47532B4B7F
7ADAAEDD0020BABB66D53A10D071D271494ADA002444A661B77CAEF0FA1E906C
4FD3B20A77D47FFC9426489DEA8A00B2F29D6DA04C2D43554D1621026D9A6DB8
7D14324923423648F9EA0890C1C50BFF538B19BB4228DB8F7355A1B333324F63
A51207468CFB8C75A5F11F4366063D35B6AD2A8ED1945745F1929336D4137152
913C074EEAEBE390AD0FE762D021A083E1D022D5BDB93FF1F6516231CC5D5E63
3E0ED658ED26E040F901D3F3C88941FC625BAB79EC1DB06DD438A944942B8BDE
BAA07683F1001CD7B13B54204841171270C8EDA5EFBDD182FA82067DE05B801D
E546C88A42C98C934894A7F053C55D36C84465479D5A11E49214EC81962BD90C
FE08D6465D96B25F723C05776C458B5531A23E4870E31F48D72ACE7F60765209
2E7631E957E8D40B40C0D620826494847AA16FF4FEE73F17CAF83D834ECE2A33
501AE76A003EF1B333B3F4F50AB838EA61751AC2E059287208F88221DCC6790F
50C8F69267A17637D52B26B99983A91A7CB5268FF44A519CAA5B965E0BEDCC30
3F2880475C30AF4D8E0C7DA7E0D8BC90D15FCC8E8F7F03C3DBFA70FC7FEC6AB4
CE4C3EA55A2D2F9F2E4EC72C1A62821E2E56BD88549806817AB30F477E7AB3A2
1D257ED02954F885386FFAA8031538EBF25003B326F1597EF30B6AB706A1C610
5C7A8F4EAF886FB5A95178596F98E5A2D50455E4CD426AFE7E8CB66EB2B9E8FE
1ABE72953E00702A2AC2EDB509B6EB492E19FBEC71A904DB2DD488F297D2B398
35C3CE04B6C29D7A21681B4DC425E692A0E8B8DE8C69ED7F226EBF4549A21D24
31F82F95AB7831937C55F51B1A128C12CF328BB3F5ED44B96A899932C1027111
FA374F102539425E7F66088D9DBA2BF780886E9F489374E80D243FB0DA9EE4C4
D856A5E3B0A126DE5383F242190C07CA6F6009F8547D87D96630662B981C3183
8FBD6EFCAF5ED83E134DE35D01A0C0D0AC2124805B20BA4765B3274A5035746A
075AFF40F0C27721FBB10A42071CC1CC9F684A5BCF877BE2F1F2FD05BFE36179
3B05D41817647B7D2CCF4FED3A2C8DF10D0B180076E582BD2C6ECB5A7BE7EA07
11BDE1546D5100CCD9EB725C9EF8B3F57EFD11DCC778FDA4F5EBB45E9B33C70E
B53B32AC0CC172E657DFAF79AA7ABB0D0C892E1447E6165FA38B60DE0F5EE6CB
7C2793F46141C0695207F83A34ECF50C46127058D1B8ADA71D5004782989345B
A341448F8CF25BF3B329A69E3B35FCB2D7E08E4749E1555988B4E9418BBACFC6
60D888DFD2C4B177C8B2C5EAE1BFF1F61AEFDAC0525198D23BDB68EF1F4B0158
E84C8AC3390A459C5A16571E065C42A816A48428BC42606A7A8997A2CAB3DDBE
2A14F653E6E5697723A28DB9FDCB835712A2CBAFC3324467482B3E207DF03529
DC4430C7EADAD81171285E4EEE186A2E6289CD6C2A6DE6E49F835BEC7D05728B
83F5D45FAA718D0170A75DB1EC0D32753E5CA527AB85F200C8C5AB4C1B150177
A59D30B0E01ADA8E759CF6EE8A18057931A5D2B9D008892E51209ADECF1360B4
34D74A4DA2E3E3FA4916BCE47B354019E9A47DA58C6FB1A330402C58A557E979
AFC3728D6AD4F450F97AA084ECFA5327DFD0B16E8BA5DE43E254B656996F0632
97420BC59B4773EAB9C43E62F02B32AECD9BBB403672B2B3F0F9BBAD3D07C121
C3BB8E7E103C18580C84C0EA006B9C511E00B92341450EFB37F498EB14F719C9
90F6096BE04ACAC7C3B424F0EECAB5F10DE0841659EAC7F5EAF4D4E762BDB63D
66640A2898AFF9E5DC3DEE77F3538ABB1119396725A083201920029F957AEF77
160DE7A0BAEC1CDF1448021036CF8581087825ECB35C5BB37BCE90D5AE7FBBD2
253A49D75F21792D8AEDB101A15E2D459938E2F9CA416A794FB948CD1B2EBF33
7ED0C770B41FC225A9CCBD4BE3F4073D63C8B8CEFD2A3C8220957AA38E0E9AF0
D4FAE229AD4D87A70E52AA566752654E81648C40A3A951E64241062BC37E9F56
27A293E538422E22D8A9D0CBED14855539223290B49E6F828488EBC1BEADBFB9
76B96544DC09DC5FB817C9554D242BB2E8948F01358C6C70E8D91E5E735BC144
04285DF1C824CD8EEC3A75CA05BD67C08489407582A442B6C718CC65CA0E2F5E
EA97063C75475DB5C51C360F085499E271D6F135E75395480B4F06A2386F9174
9CE20BD275C647D7816AE9F4EAA7FB276E5BB40B11C6340A42E5A36BAC71F701
7D4B1C7EC474ADD22C525D97760CF1C66660FF623999D6D420793400FF50460D
DB83AC13D9E1D381EF72D09EB760C8F0114D1973F1043AB6F9C7BCEC4C981BD9
3A39CA12F626F60D70C81E5C2BAF62A9CF388AC3364025E618E154CFDD4328B2
1CDC008809D1EC8641BED830D81FFDD2E34267CBF0E6A8399E5D71D280C06221
F6E59956971A9BEE4147427E7F868EF1125F19C63688C7F1C87DE131B9D4CDEB
59647C922C397C0AB6A934CFA99170E2555AD107CD7FD28F2E14F57E8D12D46B
2349C85DB3CBFE1C69872C4AA621B3DE7FD7886AC9136C82ED4BC38D06F23639
E3A104505273BCD1698417A58DEBD39A3771993F818FFA7D251735512F2B8C3F
F649D5FB779352E1A3FAC6AB4B96E62D82F8C6E67DDF4132879AD57944AEE5E5
2E51871A3230664DD9BA71A6562E9F8D64BC94DC5A07B42324C0B0A7EB80FEA4
3569DF51774F65EB52E740F3C7C79539459B91D9C018B9D674D4E7A3420EEA48
F757A68F9B2EC75E793D2D2319B3D635AACF51D503090CF9263D41FBCA6C078F
550B3A3E421FD448B7E4F83C5B166AA232FC79CDF7182E92F727DFC33A708080
5146E62542E11F006D741353087440DA73A34519B1501AF6F8EE54F49DCC5955
3DE2324FAF92BCC253A179E86AA01BCB517523A00F6DB57DE59CE9FD719FE838
29648D0BA202918A885F2405431E22C2327BC1E59E63041E33FFF6E9D2E0D976
F4F96996456BF74C07A2519E9D906E8BA3B40210AD340EBF9A1C42DDBC2B294D
2930A73D859D54B0CC7C6A66C58AE3FAB94839D55B97198B4DA75E9FD7351C7C
F593619B2539105131F608A0DD6823D8C64CF311AC9B6257EBE76BB04787AE02
E28990CA25305D17BB689131F80AC5255BD419A8B160C4A08D7B4265129E5EE8
E3E1E6B5BB2CAD18EEB5748DC9CEB2D198A51D07B078378F116EC7DF7C3F5859
CB141C731404B7FC3B6552C4727C14D464B96A9968BECD7229A206C00FCC7032
C1ADEE1282237A69AF5FE836E28F06875061D48D3D4A0F636A9361815A8E5A49
76C3654CCE5154FF9108636D8DFE49F75A1F22C36192AAA56C4AAA2F60629F7E
41A01D22170CD83DE2FD72695161A651C082A6771788DA0C332BC18652F5AE03
C6A627A84FB7E8B931D5D7A427F27749D4AD03D6E6699C3C12A0B27A2F7AA3BF
68BD46B99456BE1BA0DAE58157E1D60303F545DC4007CA45CBE5C62281C63332
6B91E36642DED3B7F53532D8F4AF541443931B711D6EB52F9079A40A2D58A976
F6AF8915CC3663FFCCBC1F255C2FEB79DD9105EF96388EED76DC5CF3A3EB097D
97F056E35FD1F9347D3B36B2EE52A874F1FBC322D59D7B08C2E5031793A4E702
19B6E84A656B929EB0014B3261E6533B0AF218CCC55DAABF4F26298CD2EBBDF2
A6C96DC0216B2BB604BCF621C554E81A32762046C5E9D2357D7B069353C6CAB3
4F26D4092459FCB505ED46DFA022F30EEF03A667281CB35C68C217B501ECAC9C
15F6A68B01461DD1BEAD11CC7D60FDF452A4EDC9DD388BA7FA4C2188D552D118
1A3CB9D6318F4F29F3443D6500FB6E03149F7CC6013278C5C0A120DA01F6E665
1D3C8F6D307965D35D68359813BAD6F25541B59654E6A5AF806C819DAAB568F4
3C8578C34140DD057A8140EC5704B8B003F07337A08631695330A4E44B0F6AD5
1C1C5AFEEB35A4F47A58B39670700C387A89753C883AFBA533D57759F01E21D5
0EAB067A479195589EEEDE05C4D4638A9CA26C0648155A0722084D2F49CE7494
8BC6D41443D936BFEAD705E94AC6E492102FB3210A9CA91A5EC28A9962B77BF4
4C770540F478500F9AEDFCC1472425C66852BD9057342AD57CDA090AAF7857D5
089EBC5A38C7FB7AF6EB1F3649543E9D3B2EEF94DA564B906BA92B37F9C520AD
C90A6823815DCC131CCB6CBD76DB7342E24D9BEA08E82390288D7D187FD71B49
5B8EDA584B09315D9346A534A6C0B0885B785123B7FD0492FFE0A8E6A0BF1DB8
57B9E85DDFF4C7CE2ADB228F7648515A318ED987BBABB9E49E3E2592F12F9FE5
39560F1A2A923C85709C3C57B32AED96A7ECAC7D51B62C248B0C7AF7A107D0F0
B559CCBC90229F1AAC23FFAB755AF82DB0606AC9E259A4C3DB76D4196079340B
0267D1E8FBDDC0B7D1E8CF786FB8C6F2AF94BD67A0F482F0FB634EE43C9BC8AB
093ADA968DFE18DB4AA4F0E9F9768FD54794D8743E62145D96091954F1A12AB8
A8D5D517CC14E6DF82AB97DC8F376A31D97D038AA3246105F96AF82E5932F4AB
4168242D97810F516AB115E74809B0102CEFB1B11C15EF360B37A6E0FBA12840
653BF1D69763096CD0E0CF10E474F9123EDC4993E5E065A4DD03F6CBC2DE5A13
ED8810881608845807924D30E9417CD7D4758382FBAA632F59A59CF02F140FED
43D1CE555CEEE496670384B6A83F0A9A1173F713C1E3F05C0698EB875E4D88F2
508AFE1F4CC70EACA7E0A2D5018A166926465E0C75ACB002D417A0D076D632F5
BD663F15AC679BD24125CBC95187604949B3CC794EC7B8F74FF5DE81E3210D22
B394A5ECDBB2AB5BB3D257B82175EC9FA1ACC1E60FFF0AD564FB6E0F4C977FF9
8DF721166D7F16F48B9BC1BE91EA6942A9F15844115DB78C779E41C7E5812576
950D8EB4BB466E92EB11AC951F473AADAF5FE8DEF0F7022C4E8DFBF170D07D10
1B29B8CBFC148AE7FE34B1ABDE0BBCFE5F96438E19367C2DC6603E017BE5176D
44A6074E0A96A66AB653F8F9DC48EDD4D68C89247D997C8C322CE0629CB3B19A
695CA3CC39851C37DAB7EF9912A54F84A078217C914B47DADAE8E955E02E699E
44DD8F5B801BE7EC1DB0A40706A65F5A3E17103D8C7E49B68D61F844C78918B7
7C6263119C187B11039F75E8E25549B78A4899A30392CF4C6FFAC378E2EDE984
6FA9259C25AAF3F8E03D98A9DA330D7FAF17F01511D88CB92024FE10A8DF0576
C245C901164561627451D73B6E0417C02D6649C5A86D5DFEFF6D7CD40DB209CC
FD0550A26DD55FB5CCCB11B7BF6B9D7809C7610E7FFDB588CDAABAB2AD9E3657
5978D8A2379D1545E1A5CA408073F57B3BFFF6D76FF947E9058C5F7EF5EAAB39
D7AC64A9E245DB476989EC54C994D5C33731B68098033B3B83D1D341E93449B8
CF0C8A0034E76AB913BAD841D5BB8D41C678B0759BA7D86C02143807E6D53093
A1642B97668C67D87D94DFF9C2D56B4215588D3ABAF8E2E44BAD2469EEB2F71D
6417E026785BD507C6F0A49D45399C7F64EB2ADE4834F34CE094D95BF7FE0C22
09072EC7A6F9B4AD5C65BAF8EFF8A546BFE42A7E1596477508AEF06F84995356
65F7267EF345B1EB3B7E878050F6E773833313DBDD2AFDAB15894C789F8E1C6C
5A84CA49181B3A71522FA7EB7BC3DE6F1080787A11DF5F2A4174FC078D9CB12F
CD08E531D56C05E8C053BE34D90920F7FBDAD8CB63D3A01DE1E88F9CAF40B432
44581926677B08E435B10DF1E856F379085D083CC54B2B33393647A6A09DD0C7
DC5E5490E14254D975140D4C786A4E7EBCC390304D4D78F44F9E55AFC443D673
E4ABB9B2ABDA27EEF6E41EE60C3DCE69114FBCBC4AE612E10B29B6B69D844DC0
099EAAE4418385DF30F09FA05213338FB7094DA04EC769BD5493A8271B138EE0
BE2ABF8B34C1CADC1DB997B50C860DD0A14E48FCE8323F438B8BE3E3F26B3758
65CEDDBA2B3681EFA431C7E78AF3BC6B5F3DB54DDF6A41F87F6267F00AD318DA
E0E9EBCAC06D28FE06A5D363ECD0DC0BEB7C6B803D13DD9FD12DC0DBD987D198
8C7E81D1307CB654FAC6FFD01ADD3878493DC99D4564857CE95295B39797BD42
3466B6F006879E4D3773D3CEFB7B2F00717B1A6F26B6D2951FBD2E2965F142E4
95CFD8F59B1FC1EC03A30F99B901791CB5DE46CD3D5337CE68131E351C861DB1
B4DAE47F75968CF6C2D6E3FFB0DDD7BC60B940A878C76BDED1ED74176EF8E839
ED57F3627194FF3AEFA7ED93DAA6A15162E452A771DDB19B1AA18870FB7D27F3
14EBFC3DF52394203D81FD08CAB6047B7AF37475B8F97E118C0FD5EA74A3C3D9
0C27D637311A11208A72529D2921613243914BF569EA1F9CA88B2BE7307C6FF2
83415FC83DF3F92C65FD9880E87D8FD46C66733DF3DC96D8B235AE63FB9E7AB2
074DDF739A39C6836FFED661C06299EB306C2029B30EA8D25F340674C6597F22
4DA5E0257DDA95F915A97EAC2B378F67A0B3F6A9CFC5AC053A71A50B0C767244
92F308A7B45C4941F76AD8D7B4F4AF17042A41ABFAA21EC5E21611F2F6F97989
41725CD860CBE8F564378D15517EA1BAC4131B9CC9CF26A461DDEE9E5345A5AB
AA38CB3C560269607E20D4C86DF0D2124DDE596F0EF47B96C11E9F5C4BC03E2D
FD9C817EB17975C584EBEACF95FC48CB7C32681F984338A4595A46C6382DB297
C168F2EA7F179C22A74A991DB5003268E2CCCC98CF419B5D7EA4938E917B534F
152A577947453AEC9F3D5748F5C26729FDA3C4DAE1667E6D65E382850BC3424A
981E16D8D152AAD2ACC552BD71E05B1488745D66CA6DE1589D9DB73A8CF4F82B
D83F9916E8D9509CD24F47814A02FDDAF98F3038F51064986DDA53A77F2BCA7F
23978C928E741F81B0DCE8C8C85BD0805E439C62413BF9EB888AFA9697659A89
7F30C3DA8BE0F28AF83D0DC237A77C4C2575DCDAC5BA2A880CF29FF8FCC48A44
3AF4FF0993E98513589FFFACA1E2DE83F53A155154EB62B874D5DEBC32D815BF
C4104EB68B09A6C1DCCDFD41C178D9FFA626F8A21BB54D36B2C9C62EFBB2C537
2599B84766D589D8310CF2EF1A7A66E4CB29981DA34366E49C9A7935698392EA
6F309B4C71C51CD6ECA14A9DF22538F42D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23681430 16577000 1000 600 600 (tmp.dvi)
@start /Fa 139[35 36 36 1[51 45 51 76 25 2[25 51 45 1[40
51 2[45 13[51 67 5[57 3[68 6[68 9[45 45 45 45 45 45 45
45 1[25 46[{}28 90.9091 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black -259 1229 a Fa(100000)-259
974 y(200000)-259 719 y(300000)-259 463 y(400000)-259
208 y(500000)-259 -47 y(600000)-259 -302 y(700000)16
1321 y(500)117 b(1000)94 b(1500)g(2000)g(2500)g(3000)g(3500)g(4000)g
(4500)-472 441 y
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 -472 441 a -603 464 a Fa(Heigh)m(t)-472
441 y
 currentpoint grestore moveto
 -472 441 a 1088 1458 a Fa(Age)354 -440 y(Learning)31
b(Sample)f(and)g(its)g(Lin.)41 b(Regression)-600 1500
y @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury 3600
@rwi @setspecial
%%BeginDocument: tmp-inc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tmp.tex
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Fri Jun  7 13:47:35 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tmp.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (jair)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun  7 13:47:35 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
1606 704 M
63 0 V
5200 0 R
-63 0 V
stroke
LTb
1606 1317 M
63 0 V
5200 0 R
-63 0 V
1606 1929 M
63 0 V
5200 0 R
-63 0 V
1606 2542 M
63 0 V
5200 0 R
-63 0 V
1606 3154 M
63 0 V
5200 0 R
-63 0 V
1606 3767 M
63 0 V
5200 0 R
-63 0 V
1606 4379 M
63 0 V
5200 0 R
-63 0 V
1606 704 M
0 63 V
0 3612 R
0 -63 V
2264 704 M
0 63 V
0 3612 R
0 -63 V
2922 704 M
0 63 V
0 3612 R
0 -63 V
3580 704 M
0 63 V
0 3612 R
0 -63 V
4238 704 M
0 63 V
0 3612 R
0 -63 V
4895 704 M
0 63 V
0 3612 R
0 -63 V
5553 704 M
0 63 V
0 3612 R
0 -63 V
6211 704 M
0 63 V
0 3612 R
0 -63 V
6869 704 M
0 63 V
0 3612 R
0 -63 V
stroke
1606 4379 N
0 -3675 V
5263 0 V
0 3675 V
-5263 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
3716 2541 Pls
3053 2112 Pls
4106 2352 Pls
2811 1513 Pls
4895 3398 Pls
3560 1928 Pls
2966 2020 Pls
2826 1310 Pls
2764 1390 Pls
2914 1577 Pls
3501 1561 Pls
3580 2217 Pls
3435 2113 Pls
6840 4378 Pls
2616 1683 Pls
3974 2847 Pls
2685 1928 Pls
2574 1316 Pls
4381 3154 Pls
4936 3760 Pls
3273 1641 Pls
3432 1653 Pls
3059 1579 Pls
3530 1683 Pls
6066 3607 Pls
2395 1622 Pls
2866 2937 Pls
4272 2964 Pls
3843 3001 Pls
4418 1928 Pls
3368 2235 Pls
2264 1132 Pls
3632 2020 Pls
5076 3643 Pls
3331 1843 Pls
2839 1622 Pls
2578 1500 Pls
3753 2205 Pls
6494 3454 Pls
3793 1849 Pls
3138 2349 Pls
3893 2112 Pls
4326 2015 Pls
2527 1923 Pls
2069 1193 Pls
3385 1928 Pls
2531 1558 Pls
1.000 UL
LTb
LCb setrgbcolor
1606 4379 N
0 -3675 V
5263 0 V
0 3675 V
-5263 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
