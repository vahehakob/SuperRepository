%!PS-Adobe-2.0
%%Creator: dvips(k) p1.7a Copyright 2005 ASCII Corp.(www-ptex@ascii.co.jp)
%%+ based on dvips(k) 5.95b Copyright 2005 Radical Eye Software (www.radicaleye.com)
%%Title: tmp.dvi
%%CreationDate: Tue May 14 22:26:31 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 252
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o tmp.ps tmp.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.05.14:2226
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 68 /D put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828491
84A8EBDB90B1167333987F7D42A76E9C5C5A8429E1CACD4206D312E9CA60D7E0
6E906270BD9F42EEE618B7F5CC9ACBE1FCDB7E7C02D756FBDB84935E6A69A135
79EE9A6B381CE1A62B67DB4B9C653778EF9E0D648998F8B44B7EB43DD46D01E0
50A7D125A3382A4B3708802940C585021EF133F1918ABA1001F470EEBD6272A1
A9E989145B8C93EFDCE8F613C8AAA1868409158EB48AD76F7CFCA25A0E20D21C
225E004DF48159807A764D531E3B5CD8D17B018A7A3D4787A965192CA6DCF61A
B5B28E406FD909BB2DA0F3D2CAE3F2C028C5EF249DA376F0F229976618557A30
2BAF9183DC66E9B2499EFD2A7F26118084FDE45F73DCA2513811A6517DBDFD7D
818F48E683560C67CC04960E6059F6BE26EBF8CE5452C6167A41DFC3F394CD7F
A1132EEB0C7442A63B99930B70AF8F83B896CCD0A712E33407446CEAB96221D7
B3F4342FCD7934070EA563F29646038BEA006EEBAB8DBE2B1C45A448EA415679
09C0D885F6CFB0FD8CBF04DAB0BB5600EA629EE2D8BA317D9B05340C6A333D81
6564FF1E0CD228B9C863CF3CD4AA9D77C6EA9830EA364369A76A042526271454
42172D12B63A6C89C2810AEA0884D23BC1EAEE8AE8BB9A1141A4CEE5B9219284
D91DA3BD49BE424BBB2D32079DD408226AEAA0C4DCB8DF16CC66B426BBC6F439
138718DE7B3EC43D308368ACFBC4797C0EBD20F457968E85C3FE71046BF0C200
6CCD94C3F0934765641CCC6100EB759CD73B35E6F07FC3AC247E527A9DEC11AD
B9C1D35432F05E95C4A058E9C91C0AFC64D21CF1CCFCBAC8BEA390C47D2B7A7A
CB3C56C49A020E6F6070C35C452CDF0802BB268269F69E7D4E26057622C6563F
6A3764BBF15FB094CA3260DCD2CE2E64DC5AE7C8E5B1F1EC28DAEB0289A3EA36
017EAA8F1F4A7CAD3320EFB4D2DD74E2FB2E5B86F89160CB448A629DD62E1B3B
628842F9D69809225B703D10B9BCB7B42FF12DCE1047CA65062E70F4703BFBA7
1F9C8F2AF6AC52FE20AD3173B0A4D29BA5DAEF9610D56912D0ED24B140920B73
E76CA11F80C866EEC9D5B0BFA0817D83D353E74C93F77999991B42130D1DE047
48B12EC127E1FF48C4D90A9275C328C3C3CFE2F0FEAEC7000EEE93E48EF8672D
AE0B0DCC763B159430F8314ACC21D7000A23C34977F546AA676CB531C1505329
20E299EB6551D44BE720170B873059ADABBAAAE5A2170002D1D10B98AECB1F06
3BF4A7F29715B467A86854235ED5FF9897D56E2259FD01BDA92D7B16DB97B1F3
91725F861B0FFF2D689F5D6F097B98CFF671F8824F3A4A6EB4FC3C2DE227C3C5
907AE9A7E1003BE39B40E26C83E82534F37B1B3067BEA61BCE0C619C363B2B1F
2C24F292741CB440E330C22D51BFD92D9A7CE418E05712413CEC835FC1578E50
F507637847FE4FECBB28DB8B81487C6A51DDA242A8352A4CF62EFF01F1A3ACD5
6888802BEA8E20FF73D7A83D454B1971214848F6B96A27A262AE0E1131A00393
622861BF323E6E7E9AA226C02FB4F83D06065CF4598B15A71DD794C114A5804F
C11BC0006F4583508F6FA76990E27FB43FAAF49C1B5FD96AB1B56155D640C7B8
DA48DB47B1E4ACB8DFC825927E62F6106A1BC75B97C03B1A056B26116E2BAC2D
53E4560DF1DA94403C5A8F3F822E2FF26C15C7675CBC099319333E5C3534974F
B76555BD48C52B38BE11DE23285B99D86CF708571684A13F66D0722A472B9413
80AD4E45DBB3553731ED2B9D73FAC5BAD885F11438032FA6FD063635FB686728
3C2D67B94730E648A44EA2309DFF1CAA27CCA779FCA9A8813235A69DB4346CBC
359B1BE5543B8D3D74182E665DD104E28F56D85B27B9943F583A5F570CE7E3F3
E67A6509C82A52D72EFA7378C9D61C417973EADCE993D11EDAE4AC02DAB1E739
71808150DAFD17F336F47582320EE32F0DA2998E7963E4F792903CD70D00B4D5
E03CBD8D9E0C7A913A6B5FE63D30BBBD5A4DD8C74DB4821F900433A16E19BD98
ABBF78D005E804FA5E459B7163E99D53C64477D24FF7896D62551215E9E97625
177135E0EC70604856FE650A01A07295F0FBF35310E6572DC5120DBB523A5FD6
631E0D9E852DCA98590E3D6489FF489FA896859C5E82F0E847D6086D9986E3E0
EB49B93AA64271DD0099DFC28635647D57B56A42E9C40AB81FA6E032A9BB943D
8C8F69374D05C0E7730DDF9B458DED9C0718DC7EC802CD39C6DFDF8B36C8D10A
2B3FBBA975CF3D0E94C797C2E5B7C4C18B8060F48D6E1E9B4E6A3572A1CF493D
A16D062802BBE0236D3F4B8F246E710191043AE379A90C48543C62A127BDC675
535F247A7265BEAD8CA4892D63B776F97AA2A0C2553A1C4F21CE0D5912FC60E9
AB4B4260E4B6E0ED87014F7190A1A6753450BE92B2B74D33D5FF6EB92FA580A3
5F9DB1192067214C91BE4560C0D85A6A0CE317A7385F81BC907B5A225DFC3B5E
5F354355CD4B51B3BD993177AE5737156F79F02B75EFEFAF086C449DE01FAD69
3F28D92961EBA4BFE5A99CFE9BDE7AF8811F25D3190FCF2248D0CC09C0C03F79
AA350092FB7868401CBA0A5DF40740FBB5BB9AFC314F9EC6A3221431DEC91256
388F58145CF0EBF4A709988B04A9B203F79AA797E1CF9FEB25855F9AB223B21B
AE78820DB96FB26ECAB7875B13453D17B5FFDA97C047C8F7ECD22363B6F76EA7
FBB18A0A661ABA362687F71D9AFD8E4DAE44499CE456C159BFD769557CE7437A
138D468446645867255C9EE6112EEB1362B3B050E7554F72AFAA05690EDD74E6
E6BD91F9A86622902BD10FF87CA3AE55EF74DCA02EDCEC64709F27D4DA4C5DA4
4668641B6F639727FF2CC7B0FD76E7D5423DD268A3CA4B1836E6F903A906AEBA
E076C38C99AD2B58AF33ED2F27B3E2ACF79ED6E62841FF4C78AFD6A2EF9232F6
D981F47BBBCC6A4A2D230286972D7088005DB5F405267F147F0AC9FC51C48691
90950F49B746E1F7AE892D8AB95D6BAA0CEAF9620FD9379B6B48B3483B1AC4CA
8153A3BAF8DCACC3DE699C35B09ECAD97624AD338070EAEBF4AE1CB034E6C3C7
F41E7E7E4CAC30575347D3D8C5B1B1B33FE64165BC329CAD578DAA611B8005D3
C5FB643C25F880F76A1D00A8DA7C5E260784867145B1A6E2BAC7A35E6FE621F3
8C9B1EE47D3CCE8AA5F53C5B65E87453D10825C7523435CE92F4AFBFF8F5BF36
6F65526A944533EA82B4AD66449C595CF2C3C7FF77330B027F5B95EE29C51130
F4C60935D6F1B2F31F7FAA4DB3B48397E0F9C4BA986F7DED9C67BE927FCD96C2
7A7A4DED6841701F64BCA6FD86E5032D323ACC265919163AB2AE6D16468A60F0
D7A4816932305D1D6AB43A1F15E961D46E605D1B25A7E91CC35EE059096ACD12
6CBC678C36D447B9014F56D2103CBB040B315F60AA39848E4019E43490DC7CA2
E04B1E23BBF032E1D36EE8D5D36901A31752B327A1C33892B13F7F7D81378102
F1E822AF69D57B3DF6AE8705E6450C9190408B24C80066D822FF8EB227C6F00F
455B8900EE79FA14F9B925424CAF7D418D93847499BE1E1402A452FD341EC428
ADF34F5960B31F5C2C691593E2D77800567CE165FB3D7C6DCADBBD0E45746CEC
D80C37862E9E8565BC30700FD9634117BEE9619FBED5684CA24815D14FD110BC
0C3E4CD2662D6BCE8D17E9826A595A93D8ECAEBA606AC138F9B2DDDA0A36FD42
97C35EE27B66C165D68E136062981AE5C86BC66890421BEDDEEA3F1E5C60D09C
7660E3644F1818BA4124AB2011F3EF2EFA846CB85D469ADB8CEC73E3C0D8EAE6
30F7AD3A9A9D4DAF529C65D18041F4FEFE319DD25AD4FF536EDEDACAE365D30F
6910881BD93AC828D9459046BEFB98041F114674730645B484C35BF534706EE9
184595E243E1AA101652ACA4AD4CACBED624B735E1C6BE6F0A86A34E8B492ECE
2FC5CCA1B94B68424577C0D39B2050B95E3C3D4832742AC2D99CF8664E16459F
8A158298BFC77D795214A0B38830FC3B31F39F82F42BD7BA383FDF279095F7ED
CEBAF35AC52E31B88D576B4C6F3410A249CA836F85A80FAAF56FB3AAC75A124B
6FA08B5DD2318DA431799E15F36C72502FF80DC5152259F7E56F629ADAA7E678
E411CD211D053BAB8CCDA65A5BC25E9C7335ED1EC8AAA4091145F0EDD55EB21E
672B354F0AD6BC6D6F77E7FB688D2FDC5D3F731E7F95EF46D3084219A8A909AC
F4056300F05EDBF489D440DC272F936BA349F1DC6317A7DF2B838125FE54528B
DF02CB1CAE9146F0E8B33CDAACC44643AEE6F292A72F0F2C181F8977BD85B0DB
3386337CB643A0400E6A7DFD89B5785A303DC717B26D7AA39B6169954683F90B
9C6F6FB6F7CC898BECF5E131CE8371333D0D080B5DB154CAF70E9A2172815B16
5F2F85F205757547F425A5EFEBA2C4583924937F2CCC0E9050201AC7944145B1
2419C7D05F553013CC1EC57F1F66B4885661F076BED26F376E039B2028AE4F52
B33EA9F028486F8B05369A1B8B63CD539B7AF5D9D43C91F4106901F1EA21466E
85093494A0C11C973860F89341C772782DB4CD78219EE326F432C142CB24FDF6
6054DB141A53BC84E4424028E8C6A1D306CCEE22BE6A867C7228F2878E32A6FF
5227BA23BECC8FC52CD1D97A8E26BC0DF99B8B3DA7A09DA0BAE95ED8FB0881D1
6A902A6E390C3AAD9B27B558EDE3CB9CF964A33ED71DFF62ECFBDEFA53168F7E
DFB204450066BDE0A47FED9E28F4880004222172ECB95E8FA0434A025F87B41D
D3A4AC1A089B096ED77BCFD5CF43C24DAF0A7162B4E7B1A22542F37D900237A0
FD19618DC11D4D65E406CDD98A261DE8E55B4635F1A1936367B86D62A90EC1F0
77EFFEEF62B61BB65C2673DFEF96A9A7AB6DFCAD22374332DB1A75F20AACE5E7
C133D40E7B729D003D244A0A7E3D5655D6B7E965EED163A1D28C0E93871453B2
AAB151C8832BA1216C3BE0A033DBC1C34DDCAF625CE76BDA2182D3A920FC492B
57C353490DE834353B5A8C2DAC384A4575691C59517F7181B1713281E5D401FE
9AF5A7856A28B509CF18B00389F96FDDE37EA51A7BB3553D4AB1D8208EAE29C9
D6763966B5CF7663D7987FBE5622D67433487AFB843BD78BE084FB423D169E09
3D8DE74F18DF9DC75EF777762B453CE2AE5E47662AB8EE867C040AFB518699E7
8C2E2EFF4FAF79292C043E17B78DC55A505236F57EEA22478C1094CBD8BBEFF4
82ECE29D7F131FF2F2D828FAB04431EBEDF30407FE3E629CE354BF1915BEA183
B3526B94EB2EA95E51AB7E5CB9604AD1C27F8CB8E2A8B353622E7285F54F296F
1B7BDBF44BA200FB4544C3A9593CC507372135D1F463D7BF05EF996106125A81
CFD994C5EC70E0E4F5E97B2ABC972D38855C071433C50357E0AEC5A86ADBF67A
368259946BBBC6CC18A881646BDC728D1FC124ECAE23563C7BDF54C6DF46AEF4
D35499FF8F56E10D887F48807E6C2D15E168723355F631DF263A67E56DA92F4B
E51E2D9E300CEF66A17284CC3B703788B139C4A76A8BC31031DBD2194E414F8F
82DC07E0781941B49ECBC3AED2D2B08C37204CDC923E4A50E01CE91582C28DE6
6BDE3EE9B41B0FEAF8899565FC5C1F0ED69BB8F618BB28ACC245D2965A86C14E
2C5DC5B46654FD5CE6445955A09C94535C8B2B8FF42DB96667C2B1F138A9A5DB
ACCE8D9696AB51996F71B8BC72443DC6010706CFE01CAD3DA80575BE0ACFBEEB
CD294E518F3F68269D54575437A837CFB1EB0BD0FB9501D3D4E7C9EFCFC3E294
2C3B454D214CEA8868C893A400BF971D4B669B095B33B64E876483D22170D4E8
6C5FE11BA06AA56C1AD57C57584ED4CE5FA1F9DB06BD6B18286066E254553AAA
5AFC0192C5FADBEF5F1A359350D996ECA81C10133075CD3F5A5C80288617C1AD
B49D3074393F82A5C88AF731B9A313EFA8760EF2E3A9CC67380E01A842DD624D
8FCD14B04B3BB536AFB26408922144D80122584584E8BC647970D68036EDDFFD
D3D6C7859A415886EAA3FAE6453556E2C7CD832EFCCC7A276DE5A2E6BCD37637
C972FD1EFF10D893F6978CFD98C752F03FA12D413187EBD43525997DCD3ABDE1
2B2A2E99EBA86B317D5AEFCE3C7687C945642F11F986857E0698842A8BE45012
F5ECFDF87FB08F0DDA3E5550726055837E33FBE3B64436CCC83F043BADBBB8A8
9CD62EEF54D1D1E5784F08B86F63A6BB0F26984965E4A62E7F9417C931AE8341
9E99F5C63562166FF2CA3B43842B6646F7EEEE8C50DA696C20EA590BF7CFBD8E
85B5DD7163F78E7785B345284080595619883EE06EE1A570913B8EE3B8C6617E
D352C99C0832E19AEA9F7CB7D214297D35A5BDEC107262907397079F02E9B5EA
C22740E27E991028A2C75895E7DCE6CA1615F4E136AE6D88E46B73507A4081D6
168EEE8EBBC2BF4C7675449F0DD30447C1FC28A832B1AC934B6E0D8C87663428
94FBBA86A21A3A89A4C456E27CCBFD26961759FF539BC1EFAF27C638AC7478E4
8E9151E90E696311F7B79FD236504C409F5525081AC7F6C0A4FA5CD31EEF73A4
87B1592AAC8E24A4C198BC585771DF9592F213DDBC44C66A4BF8D2B17B181CE9
63FA8FCC83A3750C72F2F8C517867A104A639523324CFCEC69137765ECC3526B
CBA0FBA7C2C2361F232FDDE09C69AEE6681B2F3ADB19C08B592C6F3F5DD4B7EE
2F84A6D8BEB1B389246D6EF3A3B076DDD56877B08CBD64D8A785A77A250AC4EB
AF308A53D2E70DAB70B6AD24BC582200B232213A11D377E178E6CEA38D15610D
EC534ECF4334D26B09783ADE1ECF3AE24E984CFCC1D31E1738BADC2EF667D524
0A4E3CC6FEEF7FD5587E9099F378CCCC09DDAA0990B1C4E4933BC88E9A70A113
95E18875ED2893FF7687F6841BC857C9211803769317868D5D55D1F44337758F
4EE71FC74F3081C1DC2910232EB26D5F9A9A9BB09DA22A2977A2F3AA1E5472C3
F86D020C705F27FCF41104F4350E7CD8F88D1C38D8291F39A61883C8B3BAC390
2EBA1DE11783493233B78BA575991B1FDEF0E162E93317A996ADF8C6C6E4089E
3782DEFD232BB51C5DA949A5F30EE1006F911DF0E69095F2BFA31AAF361F639C
4A5610536FD0688C20D21B31C3FA531E47C7BB2BAD941EE0D00CFB6CDC75B908
8F1C73AD1AEB412BEEDB66E5E96D15590D53F08CA939555BF73E5A0437A99CB4
F1576D3B20FA46063288A35C0F4BD0DD4AD94D311D2CE3D27A2ECA23A16207B1
AA58B9FB9435BC168FFE2F590560B9EA707C1E4208CDC60C9DB1D1CBD1AE51E4
DD7021273557E75EEF15FDA5BCC586F478C9F005FA0FFCDC97B2264001204F19
8F80BAF600089F31C657A0B1ADF75E8BA8964D2B51ACB93513F9E3B2002E90C8
8D3EADC961CA1AABDEF1BA47A3E39AEA2CBFB22B51CAF98A9ADFEDD10F807460
71831D42EF27C06C2FB1ECC5A1FDB0725A880A7D808DA8354FB032E8D61D2CFA
A1241F1D99264BB6BD7B5C15BBBE64657756967BEA15513F8BA39DB02B6E88EC
1154C7CF125B634A6DF7D400007516ECF5D8BF344E70F142864D9848785F8F3C
E44A8FFDBE6EB52E680C3B33EB67E6A34CAE38BD9E7E762333645319DCB0E7E5
BD88AD3EE23B3BA55C261C4F6895A56BCB3DC58C945B0B0C35023DEFA2B60D9E
0FF4EC42DDBC4ACF5958EAD1F04D812E9981B79B9A4D173DDF24D7E52CA4308D
AC53AFBFEFBAAACDF1A1FE168BD734C8AF8B597DFAF9F49FB5CC76B236547006
616BC0260658C75D96C72BE4890A529D9124DD6DC0429BD0E7A79A9FDF5FE280
8225B6A5FE6A7C9D9629385F28E3361BCC3DAA7FD5F0E255CA7D5D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 23681430 16577000 1000 600 600 (tmp.dvi)
@start /Fa 134[ 48 2[ 48 51 35 36 36 1[ 51 45 51 76 25
48 1[ 25 2[ 28 40 51 40 51 45 16[ 62 11[ 69 9[ 25 1[ 45
1[ 45 45 45 1[ 45 45 45 1[ 25 46[{ } 30 90.9091 /CMR10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Fa -196 1229 a(0) -242
846 y(50) -287 463 y(100) -287 81 y(150) -287 -302 y(200) -103
1321 y(0) 390 b(0.2) 356 b(0.4)h(0.6)f(0.8) 391 b(1) -472
441 y
 gsave currentpoint currentpoint translate -270 neg rotate neg exch neg exch translate
 -472 441 a Fa -815 464 a(n)m(um)m(b)s(er) 29 b(of)h(tok)m(ens)
-472 441 y
 currentpoint grestore moveto
 -472 441 a Fa 762 1458 a(clic)m(ks)i(in)e(p)s(ercen)m(t) 113
-440 y(Probabilit)m(y)i(Distribution:) 41 b(1000) 32
b(most)f(clic)m(k)m(ed)h(adds) -600 1500 y @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: tmp-inc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tmp.tex
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Tue May 14 22:26:31 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tmp.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (jair)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 14 22:26:31 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
63 0 V
5596 0 R
-63 0 V
stroke
LTb
1210 1623 M
63 0 V
5596 0 R
-63 0 V
1210 2542 M
63 0 V
5596 0 R
-63 0 V
1210 3460 M
63 0 V
5596 0 R
-63 0 V
1210 4379 M
63 0 V
5596 0 R
-63 0 V
1210 704 M
0 63 V
0 3612 R
0 -63 V
2341 704 M
0 63 V
0 3612 R
0 -63 V
3471 704 M
0 63 V
0 3612 R
0 -63 V
4602 704 M
0 63 V
0 3612 R
0 -63 V
5733 704 M
0 63 V
0 3612 R
0 -63 V
6863 704 M
0 63 V
0 3612 R
0 -63 V
stroke
1210 4379 N
0 -3675 V
5659 0 V
0 3675 V
-5659 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
LT0
LC0 setrgbcolor
6014 4151 N
591 0 V
0 110 V
-591 0 V
0 -110 V
Z stroke
1514 704 N
0 662 V
19 0 V
0 -662 V
-19 0 V
Z stroke
1533 704 N
0 1562 V
20 0 V
0 -1562 V
-20 0 V
Z stroke
1553 704 N
0 2058 V
22 0 V
0 -2058 V
-22 0 V
Z stroke
1575 704 N
0 3308 V
25 0 V
0 -3308 V
-25 0 V
Z stroke
1600 704 N
0 772 V
29 0 V
0 -772 V
-29 0 V
Z stroke
1629 704 N
0 717 V
34 0 V
0 -717 V
-34 0 V
Z stroke
1663 704 N
0 1544 V
25 0 V
0 -1544 V
-25 0 V
Z stroke
1688 704 N
0 643 V
10 0 V
0 -643 V
-10 0 V
Z stroke
1698 704 N
0 845 V
15 0 V
0 -845 V
-15 0 V
Z stroke
1713 704 N
0 606 V
37 0 V
0 -606 V
-37 0 V
Z stroke
1750 704 N
0 735 V
57 0 V
0 -735 V
-57 0 V
Z stroke
1807 704 N
0 1323 V
70 0 V
0 -1323 V
-70 0 V
Z stroke
1877 704 N
0 441 V
63 0 V
0 -441 V
-63 0 V
Z stroke
1940 704 N
0 276 V
50 0 V
0 -276 V
-50 0 V
Z stroke
1990 704 N
0 1029 V
95 0 V
0 -1029 V
-95 0 V
Z stroke
2085 704 N
0 221 V
161 0 V
0 -221 V
-161 0 V
Z stroke
2246 704 N
0 368 V
236 0 V
0 -368 V
-236 0 V
Z stroke
2482 704 N
0 368 V
377 0 V
0 -368 V
-377 0 V
Z stroke
2859 704 N
0 276 V
706 0 V
0 -276 V
-706 0 V
Z stroke
3565 704 N
0 404 V
754 0 V
0 -404 V
-754 0 V
Z stroke
4319 704 N
0 184 V
1414 0 V
0 -184 V
-1414 0 V
Z stroke
5733 704 N
0 404 V
1136 0 V
0 -404 V
-1136 0 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1210 4379 N
0 -3675 V
5659 0 V
0 3675 V
-5659 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 1433 -230 a(sample.tsv)p Black Black dyy
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
