template< typename Element >
void ScidacChecksum::calculate(Element const *data, uint32_t elemsPerSite, uint32_t numSites, uint32_t rankOffset)
{
  unsigned char const *pchar = reinterpret_cast< unsigned char const * >(data);
  uint32_t sizeOfSite = sizeof(Element) * elemsPerSite;

  for (size_t rank = 0; rank < numSites; ++rank, pchar += sizeOfSite)
  {
    uint32_t crcSum = crc32(pchar, sizeOfSite);
    uint32_t rank29 = (rank + rankOffset) % 29;
    uint32_t rank31 = (rank + rankOffset) % 31;

    d_sum.as32[0] ^= crcSum << rank29 | crcSum >> (32 - rank29);
    d_sum.as32[1] ^= crcSum << rank31 | crcSum >> (32 - rank31);
  }
}
