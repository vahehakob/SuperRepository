template <typename Element, size_t D >
Field< Element, D > plaquette(Field< Element, D > const &first, Field< Element, D > const &second, size_t mu, size_t nu)
{
  Field< Element, D > result(second);
  result.shift(nu, Base::dir_DOWN);
  result.shift(mu, Base::dir_UP);
  result = result * adjoint(first);
  result.shift(nu, Base::dir_UP);
  result = result * adjoint(second) * first;
  return result;
}

template <typename Element, size_t D >
Field< Element, D > staple_up(Field< Element, D > const &first, Field< Element, D > const &second,  size_t mu, size_t nu)
{
  Field< Element, D > result(second);
  result.shift(nu, Base::dir_DOWN);
  result.shift(mu, Base::dir_UP);
  result = result * adjoint(first);
  result.shift(nu, Base::dir_UP);
  result = result * adjoint(second);
  return result;
}

template <typename Element, size_t D >
Field< Element, D > staple_down(Field< Element, D > const &first, Field< Element, D > const &second, size_t mu, size_t nu)
{
  Field< Element, D > result(first.dims());
  result = adjoint(second);
  result.shift(mu, Base::dir_UP);
  result = result * (adjoint(first));
  result = result * second;
  result.shift(nu, Base::dir_DOWN);
  return result;
}
/***************************************************************************************************************
          GaugeField
****************************************************************************************************************/
template <typename Element, size_t D >
Field< Element, D > plaquette(GaugeField< Element, D > const &gf, size_t mu, size_t nu)
{
  return plaquette(gf[mu], gf[nu], mu, nu);
}

template <typename Element, size_t D >
Field< Element, D > staple_up(GaugeField< Element, D > const &gf, size_t mu, size_t nu)
{
  return staple_up(gf[mu], gf[nu], mu, nu);
}

template <typename Element, size_t D >
Field< Element, D > staple_down(GaugeField< Element, D > const &gf, size_t mu, size_t nu)
{
  return staple_down(gf[mu], gf[nu], mu, nu);
}
